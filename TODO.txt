# TODO

--- musicbox setup

  run player on boot

  do image backup
    to spare microSD card


--- interface

  buttons needed:
    play random track
    play random album
    play album for current track
    play/pause

  try BT button controller

  try USB keypad

  try small LCD display
    https://www.adafruit.com/product/3531
    https://learn.adafruit.com/adafruit-128x64-oled-bonnet-for-raspberry-pi/usage
    https://github.com/zeiv/SSD1306-ruby


--- integrate into van

  hook charger up to ignition?

  use Witty power controller/RTC
    https://www.adafruit.com/product/5704
    https://github.com/uugear/Witty-Pi-4

  or power down after idle (certain time after pause)

  pause/play on ignition
    relay -> GPIO

  mount in dash


--- update catalog

  find truncated tracks
    check metadata duration against audio duration

  add new music (Music/music to add)

  rip new CDs

  re-rip missing/lost/bad CDs
    Bill Nelson (all)
    This Mortal Coil

  re-sync


---

- improve 'check'
  - detect albums that aren't in catalog
  - detect missing cover
  - warn badly-ripped CD
  - check actual track duration against expected

- fix up track info
  - copy duration from Discogs release
  - delete :artist_name if == album.artist_name

- reimplement playlist restoration & checkpointing

- implement add/remove from [default] playlist

- submit listen log to ListenBrainz via separate gem/tool
  - tools/info:
      https://github.com/nkbt/scrobbler
      https://www.last.fm/api/scrobbling
      https://www.last.fm/api/show/track.scrobble

- volume
  - reset to 100 (or base) after each song?
  - change increment to ±10
  - +shift (or opt) does by ±1

- make server mode for player
  - listens on HTTP port?
  - at least random album/tracks, next/previous, pause/stop/play
  - some gateways to Oppo
    - volume up/down
    - source (select HDMI 1)

- fix 'sync-musicbox-to-streamer'
  - ensure doesn't write over local $MUSICBOX_ROOT!

- make 'update-tags' work again?

- when importing/updating, prompt for artist info if new
  - personal name
  - allow for modification as needed
  - allow artist ID to be user-defined
  - allow override of primary artist
    - eg, to file release under main artist instead of artist-group of collaboration

- add play history
  - choose random tracks/albums that haven't been played recently
  - or that *have* been played recently (new releases)

- when importing, rename possible 'cover.{jpg,png}' to 'original-cover...'

- don't save actual filename in Track
  - save type/ext (m4a) as separate field
  - construct filename from disc/track/title/type
  - write fixup to rename current files to re-constructed names
    - backup catalog first!

- see if taglib-ruby will substitute for ffprobe/mp4tags/mp4art/etc.

- when selecting cover, show cover images & info in iTerm
  - instead of shelling out to Preview
  - show resolution, file size, file name

- describe player modes in README
  - 3-function player
    - play random album
    - play random tracks (typical shuffle mode)
    - play album for current track

- integrate/expand ripping HOWTO

- consider using `cover_image` from collection item instead of `images` from release

- improve covers:
  - make 2-up
  - center horizontally on page
  - make crop marks

- import: handle multiple formats/discs better
  - consider case where digitized LP or downloaded tracks becomes album
  - if more than one format, prompt for choice
  - but how to handle multidisc releases 
    - some have formats of [CD, CD] ('expanded')
    - others have [CD x2] ('compact')
  - save selected format into album info
  - in general:
    - use Discogs data as a guide/template
      - but allow assigning, collapsing, expanding, reordering as needed

- allow creation of standalone album
  - for: unreleased, mixtape, etc.

- allow label font to be configured

- have player read default settings from config
  - audio-device, exclusive, EQ, etc.
  - either global (single), or as profiles (multiple)
    - so can have one for headphones, and another for speakers
    - add --profile=X flag to specify profile
    - or specify multiple configs?

- use curses or tty for full-screen player TTY mode?

- sort #find results by relevance, not by artist/title

- when updating collection, don't simply delete previous collection
  - determine additions/removals/changes
  - handle case where Discogs has merged/moved releases
    - ie, release_id has changed
    - need to move related album

- improve rip log handling
  - create Log class with attributes:
    - timestamp
    - media type
    - accurip details
    - file:
    - disc: (can be nil)
    - status: (overall)
    - tracks status: (tracks)
  - add command to show:
    - missing rips (no tracks or log files)
    - questionable rips (tracks, but no log files)
    - unconfirmed rips (no record in online databases)
    - bad rips (actual read errors)
    - dubious rips (inconsistent checksums)
    - successful rips

- calculate loudness
  - see: info/replay-gain.md